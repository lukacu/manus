# -*- Mode: CMake; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */

INCLUDE(CMakeParseArguments REQUIRED)

MACRO(EMBED_GENERATE)

    SET(SINGLE_OPTIONS DESTINATION PREFIX MODULE)

    cmake_parse_arguments(EMBED "" "${SINGLE_OPTIONS}" "FILES" ${ARGN})

    IF ("${EMBED_MODULE}" STREQUAL "")
        SET(EMBED_MODULE "embedded")
    ENDIF()

    SET(RESOURCE_FILE "${EMBED_DESTINATION}/${EMBED_MODULE}.c")
    SET(HEADER_FILE "${EMBED_DESTINATION}/${EMBED_MODULE}.h")

    FILE(WRITE "${RESOURCE_FILE}" "// Autogenerated file, do not edit!\n#include <string.h>\n#include \"${EMBED_MODULE}.h\"\n")

    SET(RESOURCE_ID 0)
    FOREACH(EMBED_FILE ${EMBED_FILES})

        GET_FILENAME_COMPONENT(EMBED_NAME "${EMBED_FILE}" NAME)
        FILE(READ "${EMBED_FILE}" CONTENT HEX)
        STRING(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," CONTENT ${CONTENT})
        FILE(APPEND "${RESOURCE_FILE}" "static const char _resource${RESOURCE_ID}[] = {${CONTENT}0}; \n")
        MATH(EXPR RESOURCE_ID "${RESOURCE_ID} + 1")
    ENDFOREACH(EMBED_FILE)

    FILE(APPEND "${RESOURCE_FILE}" "\nstatic const char* _resources[] = { \n")

    SET(RESOURCE_ID 0)
    FOREACH(EMBED_FILE ${EMBED_FILES})

        GET_FILENAME_COMPONENT(EMBED_NAME "${EMBED_FILE}" NAME)
        FILE(APPEND "${RESOURCE_FILE}" " \"${EMBED_PREFIX}${EMBED_NAME}\", _resource${RESOURCE_ID}, \n")
        MATH(EXPR RESOURCE_ID "${RESOURCE_ID} + 1")

    ENDFOREACH(EMBED_FILE)

    FILE(APPEND "${RESOURCE_FILE}" " \"\" \n }; \n")


    FILE(APPEND "${RESOURCE_FILE}" "\nconst char* ${EMBED_MODULE}_get(const char* name) { int i = 0; while (_resources[i][0]) { if (strcmp(name, _resources[i]) == 0) return _resources[i+1]; else i += 2; } return NULL; }")

    FILE(WRITE "${HEADER_FILE}" "// Autogenerated file, do not edit!\n#ifndef __${EMBED_MODULE}_H\n#define __${EMBED_MODULE}_H\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nconst char* ${EMBED_MODULE}_get(const char* name);\n#ifdef __cplusplus\n}\n#endif\n#endif\n")  

ENDMACRO(EMBED_GENERATE)